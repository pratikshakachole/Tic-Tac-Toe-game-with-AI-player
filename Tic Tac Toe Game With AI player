import random

def print_board(board):
    """Prints the Tic-Tac-Toe board."""
    print("-------------")
    for i in range(3):
        print("|", board[i][0], "|", board[i][1], "|", board[i][2], "|")
        print("-------------")

def check_win(board):
    """Checks if there is a winner or a tie."""
    # Check rows
    for i in range(3):
        if board[i][0] == board[i][1] == board[i][2] and board[i][0] != " ":
            return board[i][0]
    # Check columns
    for i in range(3):
        if board[0][i] == board[1][i] == board[2][i] and board[0][i] != " ":
            return board[0][i]
    # Check diagonals
    if board[0][0] == board[1][1] == board[2][2] and board[0][0] != " ":
        return board[0][0]
    if board[0][2] == board[1][1] == board[2][0] and board[0][2] != " ":
        return board[0][2]
    # Check for tie
    for i in range(3):
        for j in range(3):
            if board[i][j] == " ":
                return None
    return "Tie"

def get_player_move(board):
    """Gets the player's move."""
    while True:
        try:
            row = int(input("Enter row (1-3): ")) - 1
            col = int(input("Enter column (1-3): ")) - 1
            if 0 <= row <= 2 and 0 <= col <= 2 and board[row][col] == " ":
                return (row, col)
            else:
                print("Invalid move. Try again.")
        except ValueError:
            print("Invalid input. Please enter numbers.")

def get_ai_move(board):
    """Gets the AI's move."""
    # Basic AI strategy:
    # 1. Try to win (check if AI can place a mark to win)
    # 2. Block opponent's win (check if opponent can place a mark to win)
    # 3. Choose a random empty cell
    for i in range(3):
        for j in range(3):
            if board[i][j] == " ":
                # Check for AI win
                board[i][j] = "X"
                if check_win(board) == "X":
                    return (i, j)
                board[i][j] = " "
                # Check for opponent's win
                board[i][j] = "O"
                if check_win(board) == "O":
                    return (i, j)
                board[i][j] = " "
    # Choose a random empty cell
    empty_cells = []
    for i in range(3):
        for j in range(3):
            if board[i][j] == " ":
                empty_cells.append((i, j))
    return random.choice(empty_cells)

def play_game():
    """Plays the Tic-Tac-Toe game."""
    board = [[" " for _ in range(3)] for _ in range(3)]
    print_board(board)
    current_player = "X"
    while True:
        if current_player == "X":
            move = get_ai_move(board)
            print("AI played at row", move[0] + 1, "col", move[1] + 1)
        else:
            move = get_player_move(board)
            print("Player played at row", move[0] + 1, "col", move[1] + 1)
        board[move[0]][move[1]] = current_player
        print_board(board)
        winner = check_win(board)
        if winner:
            print(winner, "wins!")
            break
        else:
            current_player = "O" if current_player == "X" else "X"

if __name__ == "__main__":
    play_game()
